- @posts.each do |post|
  .col-md-6.col-md-offset-3
    .box.panel.panel-default
      .panel-heading#avatar
        = image_tag post.user.avatar(:thumb)
        '
        b
          = link_to post.user.username, post.user
        .pull-right
          = time_ago_in_words(post.created_at, { include_seconds: true })
          |  ago
      .panel-body
        p = link_to image_tag(post.image(:medium)), post
        p.btn-group
          - if user_signed_in?
            - if current_user.liked? post
              = link_to unlike_post_path(post), method: :delete, class: 'btn btn-default' do
                  span.glyphicon.glyphicon-heart
            - else
              = link_to like_post_path(post), method: :put, class: 'btn btn-default' do
                  span.glyphicon.glyphicon-heart-empty
          - else
            = link_to like_post_path(post), method: :put, class: 'btn btn-default' do
                  span.glyphicon.glyphicon-heart-empty

          = link_to new_post_comment_path(post), class: 'btn btn-default' do
              span.glyphicon.glyphicon-comment

          = link_to '#', class: 'btn btn-default' do
              span.glyphicon.glyphicon-share-alt
        .pull-right
          .dropdown
            / = link_to '#', class: 'btn btn-default dropdown-toggle' do
            button.btn.btn-default.dropdown-toggle#dropdownMenu1 type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"
              span.glyphicon.glyphicon-option-vertical
            ul.dropdown-menu aria-labelledby="dropdownMenu1"
              li = link_to 'Action', '#'
              li = link_to 'Action', '#'
              li = link_to 'Action', '#'
              li.divider role='separator'
              li = link_to 'Action', '#'

        hr
        p
          i.glyphicon.glyphicon-heart
          '
          = pluralize post.get_upvotes.size, "like"
        p
          strong
            = link_to post.user.username, post.user
          '
          = post.comment

          - if post.comments
            - post.comments.each do |comment|
              p
                strong
                  = link_to comment.user.username, comment.user
                '
                = comment.comment


